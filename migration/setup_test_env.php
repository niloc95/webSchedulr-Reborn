<?php
// Generated at: 2025-02-27 08:55:11
// Generated by: niloc95

class TestEnvironmentSetup
{
    private $basePath;
    private $dbConfig;

    public function __construct()
    {
        $this->basePath = dirname(__DIR__);
        $this->loadEnvFile();
    }

    private function loadEnvFile()
    {
        $envFile = file_exists($this->basePath . '/.env.testing')
            ? $this->basePath . '/.env.testing'
            : $this->basePath . '/.env';

        $env = parse_ini_file($envFile);
        
        $this->dbConfig = [
            'host' => $env['DB_HOST'] ?? '127.0.0.1',
            'port' => $env['DB_PORT'] ?? '3306',
            'database' => $env['DB_DATABASE'] ?? 'webschedulr_test',
            'username' => $env['DB_USERNAME'] ?? 'root',
            'password' => $env['DB_PASSWORD'] ?? ''
        ];
    }

    public function setup()
    {
        echo "Setting up test environment...\n";

        // 1. Create .env.testing if it doesn't exist
        $this->createTestEnv();

        // 2. Generate application key
        $this->generateAppKey();

        // 3. Create test database
        $this->createTestDatabase();

        // 4. Run migrations for test database
        $this->runTestMigrations();
    }

    private function createTestEnv()
    {
        $envTestingPath = $this->basePath . '/.env.testing';
        
        if (!file_exists($envTestingPath)) {
            $envContent = "APP_NAME=WebSchedulr
APP_ENV=testing
APP_KEY=
APP_DEBUG=true
APP_URL=http://localhost

DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=webschedulr_test
DB_USERNAME={$this->dbConfig['username']}
DB_PASSWORD={$this->dbConfig['password']}

BROADCAST_DRIVER=log
CACHE_DRIVER=array
QUEUE_CONNECTION=sync
SESSION_DRIVER=array
MAIL_MAILER=array";

            file_put_contents($envTestingPath, $envContent);
            echo "Created .env.testing file\n";
        }
    }

    private function generateAppKey()
    {
        echo "Generating application key...\n";
        shell_exec('php ' . $this->basePath . '/artisan key:generate --env=testing');
    }

    private function createTestDatabase()
    {
        echo "Creating test database...\n";
        
        try {
            $pdo = new PDO(
                "mysql:host={$this->dbConfig['host']};port={$this->dbConfig['port']}",
                $this->dbConfig['username'],
                $this->dbConfig['password']
            );
            
            $pdo->exec("DROP DATABASE IF EXISTS {$this->dbConfig['database']}");
            $pdo->exec("CREATE DATABASE {$this->dbConfig['database']}");
            
            echo "Test database created successfully\n";
        } catch (PDOException $e) {
            echo "Error creating database: " . $e->getMessage() . "\n";
            exit(1);
        }
    }

    private function runTestMigrations()
    {
        echo "Running test migrations...\n";
        shell_exec('php ' . $this->basePath . '/artisan migrate:fresh --env=testing --seed');
    }
}

// Run setup
$setup = new TestEnvironmentSetup();
$setup->setup();