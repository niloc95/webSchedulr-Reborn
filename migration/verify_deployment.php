<?php
// Generated at: 2025-02-27 08:45:41
// Generated by: niloc95

class DeploymentVerifier
{
    private $basePath;
    private $requiredFiles = [
        '.github/workflows/main.yml',
        'phpunit.xml',
        'tests/TestCase.php',
        'tests/CreatesApplication.php',
        'tests/Feature/BasicTest.php'
    ];

    private $requiredDirs = [
        'tests/Feature',
        'tests/Unit'
    ];

    public function __construct()
    {
        $this->basePath = dirname(__DIR__);
    }

    public function verify()
    {
        echo "Verifying deployment setup...\n";
        
        // Check required directories
        $this->verifyDirectories();
        
        // Check required files
        $this->verifyFiles();
        
        // Verify test environment
        $this->verifyTestEnvironment();
        
        // Verify composer configuration
        $this->verifyComposerConfig();
    }

    private function verifyDirectories()
    {
        echo "\nChecking required directories...\n";
        foreach ($this->requiredDirs as $dir) {
            $path = $this->basePath . '/' . $dir;
            if (!is_dir($path)) {
                echo "Creating directory: {$dir}\n";
                mkdir($path, 0755, true);
            } else {
                echo "✅ Directory exists: {$dir}\n";
            }
        }
    }

    private function verifyFiles()
    {
        echo "\nChecking required files...\n";
        foreach ($this->requiredFiles as $file) {
            $path = $this->basePath . '/' . $file;
            if (!file_exists($path)) {
                echo "❌ Missing file: {$file}\n";
            } else {
                echo "✅ Found file: {$file}\n";
            }
        }
    }

    private function verifyTestEnvironment()
    {
        echo "\nVerifying test environment...\n";

        // Check PHPUnit installation
        if (!file_exists($this->basePath . '/vendor/bin/phpunit')) {
            echo "❌ PHPUnit not installed\n";
            echo "   Run: composer require --dev phpunit/phpunit\n";
        } else {
            echo "✅ PHPUnit installed\n";
        }

        // Check phpunit.xml configuration
        if (!file_exists($this->basePath . '/phpunit.xml')) {
            echo "❌ phpunit.xml not found\n";
        } else {
            echo "✅ phpunit.xml exists\n";
        }

        // Check test database configuration
        $envPath = $this->basePath . '/.env.testing';
        if (!file_exists($envPath)) {
            echo "Creating .env.testing file...\n";
            copy($this->basePath . '/.env', $envPath);
            $env = file_get_contents($envPath);
            $env = str_replace('DB_DATABASE=webschedulr', 'DB_DATABASE=webschedulr_test', $env);
            file_put_contents($envPath, $env);
        }
        echo "✅ Test environment file configured\n";
    }

    private function verifyComposerConfig()
    {
        echo "\nVerifying composer configuration...\n";
        
        $composerJson = json_decode(file_get_contents($this->basePath . '/composer.json'), true);
        
        // Check autoload-dev configuration
        if (!isset($composerJson['autoload-dev']['psr-4']['Tests\\'])) {
            echo "❌ Tests namespace not configured in composer.json\n";
            echo "   Add this to composer.json autoload-dev.psr-4:\n";
            echo "   \"Tests\\\\\": \"tests/\"\n";
        } else {
            echo "✅ Tests namespace configured\n";
        }
    }
}

// Run verification
$verifier = new DeploymentVerifier();
$verifier->verify();